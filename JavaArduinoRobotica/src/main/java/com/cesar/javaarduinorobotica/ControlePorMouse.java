/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cesar.javaarduinorobotica;

import java.awt.Component;
import java.awt.Cursor;
import java.awt.event.MouseEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RootPaneContainer;

/**
 *
 * @author cesar
 */
public class ControlePorMouse extends javax.swing.JFrame {

    Arduino arduino = null;
    int posicaoAltura = 90;
    int posicaoGarra = 90;

    /**
     * Creates new form ControlePorMouse
     */
    public ControlePorMouse() {
        initComponents();
        int cursorType = Cursor.CROSSHAIR_CURSOR;
        Component glassPane = ((RootPaneContainer) painel.getTopLevelAncestor()).getGlassPane();
        glassPane.setCursor(Cursor.getPredefinedCursor(cursorType));
        glassPane.setVisible(cursorType != Cursor.DEFAULT_CURSOR);
        try {
            arduino = new Arduino();
        } catch (Exception ex) {
            Logger.getLogger(ControlePorMouse.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private int limitMax = 180;
    private int limitMin = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        painel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        painel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        painel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                painelMouseMoved(evt);
            }
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                painelMouseDragged(evt);
            }
        });
        painel.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                painelMouseWheelMoved(evt);
            }
        });
        painel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                painelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout painelLayout = new javax.swing.GroupLayout(painel);
        painel.setLayout(painelLayout);
        painelLayout.setHorizontalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 387, Short.MAX_VALUE)
        );
        painelLayout.setVerticalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 256, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        getContentPane().add(painel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void painelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelMouseMoved
        enviaComando(ServoEnum.BASE.getIdentificador(), scale(evt.getX(), painel.getWidth()));
        enviaComando(ServoEnum.DISTANCIA.getIdentificador(), scale(evt.getY(), painel.getHeight()));
    }//GEN-LAST:event_painelMouseMoved

    private void painelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelMouseDragged

    }//GEN-LAST:event_painelMouseDragged

    private void painelMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_painelMouseWheelMoved
        // TODO add your handling code here:       
        if(evt.getWheelRotation()< 0 && posicaoAltura > limitMin){
            posicaoAltura += evt.getUnitsToScroll()*2;
            enviaComando(ServoEnum.ALTURA.getIdentificador(), posicaoAltura);
        }else if(evt.getWheelRotation() > 0 && posicaoAltura < limitMax){
            posicaoAltura += evt.getUnitsToScroll()*2;
            enviaComando(ServoEnum.ALTURA.getIdentificador(), posicaoAltura);
        }
    }//GEN-LAST:event_painelMouseWheelMoved

    private void painelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelMouseClicked
        if(evt.getButton() == MouseEvent.BUTTON1){
            posicaoGarra += -5;
            enviaComando(ServoEnum.GARRA.getIdentificador(), posicaoGarra);
        }else if(evt.getButton() == MouseEvent.BUTTON3){
            posicaoGarra += 5;
            enviaComando(ServoEnum.GARRA.getIdentificador(), posicaoGarra);
        }
    }//GEN-LAST:event_painelMouseClicked

    void enviaComando(String identificador, int posicao) {
        String comando = identificador + (String.format("%02d", posicao));
        arduino.enviarComando(comando);
    }

    private int scale(int valueIn, int baseMax) {
        return ((limitMax - limitMin) * (valueIn - 0) / (baseMax - 0)) + limitMin;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControlePorMouse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControlePorMouse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControlePorMouse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControlePorMouse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ControlePorMouse().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel painel;
    // End of variables declaration//GEN-END:variables
}
